// Frog Jump - In Minimum Energy To Reach End

import java.util.* ;
import java.io.*; 
public class Solution {
    private static int[] dp;
    public static int frogJump(int n, int arr[]) {

        // Write your code here..
        dp = new int[n+1];
        Arrays.fill(dp, -1);
        return helper(0, n, arr);
    }

    private static int helper
    (
        int i, 
        int n, 
        int[] arr
    ) {
        if (i >= n) {
            return Integer.MAX_VALUE;
        }
        if (i == n-1) {
            return 0;
        }

        if (dp[i] != -1) {
            return dp[i];
        }
        int firstJump = helper(i+1, n, arr) + Math.abs(arr[i] - arr[i+1]);
        int secondJump = Integer.MAX_VALUE;
        if (i+2 <= n-1) {
            secondJump = helper(i+2, n, arr) + Math.abs(arr[i] - arr[i+2]);
        }

        return dp[i] = Math.min(firstJump, secondJump);

    }

}
